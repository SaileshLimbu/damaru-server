version: 2.1

executors:
  node-executor:
    docker:
      - image: circleci/node:14
    working_directory: ~/repo

jobs:
  build:
    executor: node-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-deps-{{ checksum "package-lock.json" }}
            - npm-deps-
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: npm-deps-{{ checksum "package-lock.json" }}
      - run:
          name: Build app
          command: npm run build
      - run:
          name: Zip build
          command: zip -r dist.zip dist
      - persist_to_workspace:
          root: .
          paths:
            - dist.zip

  deploy_test:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Transfer to server
          command: scp /workspace/dist.zip user@server:/path/to/destination
      - run:
          name: SSH to server and deploy (test)
          command: |
            ssh user@server "unzip /path/to/destination/dist.zip -d /path/to/destination && \
                             cp /dev/.env /path/to/destination/.env && \
                             pm2 restart all && nginx -s reload"

  deploy_live:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Transfer to server
          command: scp /workspace/dist.zip user@server:/path/to/destination
      - run:
          name: SSH to server and deploy (live)
          command: |
            ssh user@server "unzip /path/to/destination/dist.zip -d /path/to/destination && \
                             pm2 start all && nginx -s reload"

workflows:
  version: 2
  build_deploy:
    jobs:
      - build
      - deploy_test:
          requires:
            - build
          filters:
            branches:
              only:
                - feature/deployment
      - deploy_live:
          requires:
            - build
          filters:
            branches:
              only:
                - live
